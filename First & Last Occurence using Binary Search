// Binary Search without recursions
#include <iostream>
using namespace std;
int fbs (int *arr, int size ,int key)
{
    int s = 0;
    int e = size-1;
    int mid = s+(e-s)/2;
    int ans = -1;
   for (int i = 0; i<e; i++)
   {
    if (arr[mid]==key)
    {
     ans = mid;
     e = mid-1;
        
    }
    else if(arr[mid]<key)
    {
        s =mid+1;
    }
    else{
        e= mid-1;
    }
    
       mid = s+(e-s)/2;
   }
   return ans;
}

int lbs (int *arr, int size ,int key)
{
    int s = 0;
    int e = size-1;
    int mid = s+(e-s)/2;
     int ans = -1;
   while(s<=e)
   {
    if (arr[mid]==key)
    {
     ans = mid;
     s = mid +1;
        
    }
   else if (arr[mid]<key)
    {
        s = mid+1;
    }
    else 
    {
        e = mid-1;
    }
    
       mid = s+(e-s)/2;
   }
   return ans;
}


int main() {
    int arr[]={1,2,3,4,5,6,6,6};
    cout<<fbs(arr,8,6)<<endl;
    cout<<lbs(arr,8,6);
    return 0;
}
