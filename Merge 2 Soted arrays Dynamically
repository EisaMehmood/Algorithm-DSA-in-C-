// MergeSort 2 Sorted Arrays
#include <iostream>
using namespace std;

void mergeSort(int *arr1 , int n1, int *arr2, int n2)
{
  int len = n1+n2;
  // Dynamically created 
  int * arr = new int[len]; 
  int i =0;
  int a = 0;
  int b = 0;
  
     while(a < n1 && b < n2)
     {
      if(arr1[a]<arr2[b])
      {
          arr[i++] = arr1[a++];
        
      }
      else
      {
          arr[i++]= arr2[b++];
     
      }
  }
  // If there are remaining elements in arr1
    while (a < n1)
    {
        arr[i++] = arr1[a++];
    }

    // If there are remaining elements in arr2
    while (b < n2)
    {
        arr[i++] = arr2[b++];
    }

  

  
    for(int i =0; i<9 ; i++)
    {
        cout<<arr[i]<<" ";
    }
     delete []arr ;
}

int main() {
    int arr1[6] = {1,3,4,6,9,10};
    int arr2[3] = {2,5,7};
    
    mergeSort(arr1,6,arr2,3);
   
    return 0;
}
